<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AccessDeny" xml:space="preserve">
    <value>Access Deny</value>
  </data>
  <data name="AssistanceRequired" xml:space="preserve">
    <value>Assistance is required</value>
  </data>
  <data name="AtleastOneEvent" xml:space="preserve">
    <value>The Funcionality needs at least one event registered</value>
  </data>
  <data name="AtleastOneFuncionality" xml:space="preserve">
    <value>The Profile needs at least one funcionality registered</value>
  </data>
  <data name="BlockedUser" xml:space="preserve">
    <value>Blocked user, Contact adminstrator of system.</value>
  </data>
  <data name="CongreagationRequired" xml:space="preserve">
    <value>Congreagation is required</value>
  </data>
  <data name="EmailExists" xml:space="preserve">
    <value>This email already exists</value>
  </data>
  <data name="EmailInvalido" xml:space="preserve">
    <value>The E-mail is Invalid</value>
  </data>
  <data name="EmailMustBeDiferent" xml:space="preserve">
    <value>The e-mail secundary must be diferent from the primary e-mail</value>
  </data>
  <data name="EndDateGreater" xml:space="preserve">
    <value>The end date must be greater than the start date</value>
  </data>
  <data name="EventDescription" xml:space="preserve">
    <value>Event Description</value>
  </data>
  <data name="EventExists" xml:space="preserve">
    <value>This event already exists to this date</value>
  </data>
  <data name="Exists" xml:space="preserve">
    <value>{0} already exists</value>
  </data>
  <data name="ExpirationDateGrantInitialDate" xml:space="preserve">
    <value>The expiration date must be greater or equal than the initial date</value>
  </data>
  <data name="FuncionalityDoesNotExists" xml:space="preserve">
    <value>This Funcionality / Event {0} does not exist</value>
  </data>
  <data name="FuncionalityDuplicate" xml:space="preserve">
    <value>This Funcionality '{0}' already exist for this profile</value>
  </data>
  <data name="GroupRequired" xml:space="preserve">
    <value>Group is required</value>
  </data>
  <data name="HtmlBody_1" xml:space="preserve">
    <value>Hi {0}! A new account has been created for you in the System.</value>
  </data>
  <data name="HtmlBody_1b" xml:space="preserve">
    <value>Hi {0}! Your user´s password was reset in the system.</value>
  </data>
  <data name="HtmlBody_2" xml:space="preserve">
    <value>User:</value>
  </data>
  <data name="HtmlBody_3" xml:space="preserve">
    <value>Temporary Password:</value>
  </data>
  <data name="HtmlBody_4" xml:space="preserve">
    <value>Upon entrance for your safety, prompted the change this password.</value>
  </data>
  <data name="HtmlBody_5" xml:space="preserve">
    <value>Click &lt;a href="{0}"&gt;here&lt;/a&gt; to connect in the system.</value>
  </data>
  <data name="InitialDateGrantCurrentDate" xml:space="preserve">
    <value>The initial date must be greater or equal than the current date</value>
  </data>
  <data name="InvalidCredentials" xml:space="preserve">
    <value>Invalid Credentials</value>
  </data>
  <data name="InvalidDate" xml:space="preserve">
    <value>The date must be  or equal less the current date</value>
  </data>
  <data name="InvalidPassword" xml:space="preserve">
    <value>Invalid Password</value>
  </data>
  <data name="InvalidUserName" xml:space="preserve">
    <value>User name is invalid.</value>
  </data>
  <data name="LeaderRequired" xml:space="preserve">
    <value>Leader is required</value>
  </data>
  <data name="LoginExists" xml:space="preserve">
    <value>This login or E-mail already exists</value>
  </data>
  <data name="Max" xml:space="preserve">
    <value>{0} should not have more than {1} chars</value>
  </data>
  <data name="MaxAssistance" xml:space="preserve">
    <value>Assistance should not have more than {0} </value>
  </data>
  <data name="MaxEmail" xml:space="preserve">
    <value>Login should not have more than {0} chars</value>
  </data>
  <data name="MaxLogin" xml:space="preserve">
    <value>Login should not have more than {0} chars</value>
  </data>
  <data name="MaxName" xml:space="preserve">
    <value>Name should not have more than {0} chars</value>
  </data>
  <data name="MaxPassword" xml:space="preserve">
    <value>Password should not have more than {0} chars</value>
  </data>
  <data name="MaxPhone" xml:space="preserve">
    <value>Phone number should not have more than {0} chars</value>
  </data>
  <data name="Min" xml:space="preserve">
    <value>{0} should have at least {1} chars</value>
  </data>
  <data name="MinLogin" xml:space="preserve">
    <value>Login should have at least {0} chars</value>
  </data>
  <data name="MinName" xml:space="preserve">
    <value>Name should have at least {0} chars</value>
  </data>
  <data name="MinPassword" xml:space="preserve">
    <value>Password should have at least {0} chars</value>
  </data>
  <data name="NameExists" xml:space="preserve">
    <value>This name already exists</value>
  </data>
  <data name="NewPasswordEqualPrevious" xml:space="preserve">
    <value>The password can't not be equal the previous password</value>
  </data>
  <data name="OperatorGroupInvalid" xml:space="preserve">
    <value>When informing an operator group, the operator, customer or room should not be informed.</value>
  </data>
  <data name="PasswordDoesNotMatch" xml:space="preserve">
    <value>The passwords does not match.</value>
  </data>
  <data name="PeriodoInvalid" xml:space="preserve">
    <value>The period of the system access has expired. Contact the administrator of the operator.</value>
  </data>
  <data name="Profile" xml:space="preserve">
    <value>Profile</value>
  </data>
  <data name="ProfileEventAlreadyExists" xml:space="preserve">
    <value>This Funcionality / event {0} already exists</value>
  </data>
  <data name="ProfileHasUsers" xml:space="preserve">
    <value>This profile '{0}' has associate user(s). </value>
  </data>
  <data name="ProfileRequired" xml:space="preserve">
    <value>User profile is required</value>
  </data>
  <data name="RegisterNotFound" xml:space="preserve">
    <value>{0} not found</value>
  </data>
  <data name="RequirementsPassword" xml:space="preserve">
    <value>The password must contain letters and numbers and at least one capital letter.</value>
  </data>
  <data name="ResponsibleRequired" xml:space="preserve">
    <value>Responsible is required</value>
  </data>
  <data name="SexInvalid" xml:space="preserve">
    <value>El Sex is invalid</value>
  </data>
  <data name="SubjectEmail" xml:space="preserve">
    <value>New Account Created </value>
  </data>
  <data name="SubjectEmail1" xml:space="preserve">
    <value>Your Account was reset </value>
  </data>
  <data name="SystemDoesNotExists" xml:space="preserve">
    <value>This System does not exists</value>
  </data>
  <data name="SystemRequired" xml:space="preserve">
    <value>System is required</value>
  </data>
  <data name="TellOperator" xml:space="preserve">
    <value>The Operator should be informed</value>
  </data>
  <data name="Titulo" xml:space="preserve">
    <value>Title</value>
  </data>
  <data name="UserNotFound" xml:space="preserve">
    <value>User not found</value>
  </data>
  <data name="UserPassInvalidValidator" xml:space="preserve">
    <value>Login / Pass invalid.</value>
  </data>
</root>